{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","map","page","active","handlePageChange","items","App","useState","setPage","setPerPage","firstItem","lastItem","length","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IACxCM,EAA8B,IAAhBL,EACdM,EAAaN,IAAgBG,KAAKC,KAAKN,EAAQC,GAoBrD,OACE,qBAAIQ,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAxBe,WAChBN,GACHJ,EAAaD,EAAc,IAiBzB,oBAWDE,EAAMU,KAAI,SAACC,GAAD,OACT,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASb,IAFrB,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA9CM,SAACE,GACpBA,IAASb,GACXC,EAAaY,GA4CQE,CAAiBF,IAJlC,SAMGA,SAKP,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAnDe,WAChBL,GACHL,EAAaD,EAAc,IA4CzB,wBCzEFgB,EAAQzB,EAAW,EAAG,IACzBqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOL,EAAP,KAAaM,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KAEMC,GAAcR,EAAO,GAAKd,EAAW,EACrCuB,EAAWD,EAAYtB,EAAU,EAAIiB,EAAMO,OAC7CF,EAAYtB,EAAU,EACtBiB,EAAMO,OAEJC,EAAeR,EAAMS,MAAMJ,EAAY,EAAGC,GAShD,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BQ,EAD1B,cACyCC,EADzC,eACwDN,EAAMO,OAD9D,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO5B,EACP6B,SAtBkB,SAC1BC,GAEAT,GAAYS,EAAMC,OAAOH,OACzBR,EAAQ,IAaF,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOkB,EAAMO,OACbxB,QAASA,EACTC,YAAaa,EACbZ,aAAckB,IAGhB,6BACGK,EAAaZ,KAAI,SAAAoB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aC9D9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f517b1f9.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (number: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: isFirstPage,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((page) => (\n        <li\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const firstItem = ((page - 1) * perPage) + 1;\n  const lastItem = firstItem + perPage - 1 < items.length\n    ? firstItem + perPage - 1\n    : items.length;\n\n  const visibleItems = items.slice(firstItem - 1, lastItem);\n\n  const handlePerPageChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}